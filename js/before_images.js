// This file was generated by including the allheader and allfooter and adding an extra script for hide_synopsis that should
// be run prior to images being shown.  Ideally, the compiler would generate this file from metadata.

document_before_images_code = function() {

if ((location.host === "dvd.netflix.com") && location.pathname.indexOf("/Search") !== 0)
{
    consolelog("DVD pages not supported (except search)");
    return; // do not affect dvd pages except for the search page
}

// Make sure that page icon appears to show preferences
chrome.runtime.sendMessage({}, function(response) { });

var startTime = new Date();
var __debug_level = 0;
var __enabledScripts = {};

var loadEnabledScripts = function(profileName, defaultScripts, callback)
{
    consolelog("loadEnabledScripts");
    var keyname = "flix_plus " + profileName + " prefs";
    consolelog(keyname);
    var callback_ = callback;

    fplib.syncGet(keyname, function(items)
    {
        consolelog("found prefs:");
        consolelog(items);
        //var allPrefs = localStorage["$EXTSHORTNAME " + profileName + " prefs"];
        var allPrefs = items[keyname];
        if (typeof(allPrefs) === 'undefined')
            allPrefs = defaultScripts;
        var __enabledScripts = {};

        var allPrefsArray = allPrefs.split(",");
        for (i = 0; i < allPrefsArray.length; i++)
        {
            if (allPrefsArray[i] !== "")
                __enabledScripts[allPrefsArray[i]] = "true";
        }
        consolelog(2, __enabledScripts);

        callback_(__enabledScripts);
    });
};

var consolelog = function(msg)
{
    consolelog(0, msg);
};
var consolelog = function(level, msg)
{
    // Levels:
    // -- 0 = no messages
    // -- 1 = just high level messages (produced by compiler)
    // -- 2 = less important messages (produced by compiler)
    // -- 3 = all messages (produced by userscripts)

    if (level <= __debug_level)
        console.log(msg);
};

var main = function(callback)
{
     __debug_level = localStorage["flix_plus debug_level"];
    if (typeof(__debug_level) === "undefined")
        __debug_level = 0;

    var profileName = fplib.getProfileName();
    consolelog(1, "profile name is " + profileName);

    var defaultScripts = "id_export_ratings,id_queue_sorter,id_ratings,id_random_ep,id_fade_rated,id_links,id_granulizer,id_scrollbuster,id_sectionhider,id_fade_watched,id_removefb,id_previewlink,id_hide_postplay,id_keyboard_shortcuts,id_netflixnotes,id_boximages_in_queue,id_remove_dupes,id_hide_synopsis,id_detail_view,id_expiring";
    consolelog(2, "Loading prefs");
    consolelog(defaultScripts);
    loadEnabledScripts(profileName, defaultScripts, function(enabledScriptsParam)
    {
//    console.log("param = ");
        consolelog("enabledScripts = ");
        consolelog(enabledScriptsParam);
        __enabledScripts = enabledScriptsParam;

        var settingsLoadedTime = new Date();
        consolelog(1, 'settings loaded time = ' + (settingsLoadedTime - startTime) + 'ms');

        callback();
    });
};


var runScripts = function()
{




var ___contentscript_id = "id_hide_synopsis";

//console.log(__enabledScripts["id_hide_synopsis"]);

if ((__enabledScripts !== null) && (((typeof(__enabledScripts["id_hide_synopsis"]) === 'undefined')) || (__enabledScripts["id_hide_synopsis"] !== "true")))
        return;

//console.log(enabledScripts);

if (location.pathname.indexOf("/WiPlayer") === 0)
{
    var div = document.createElement("div");
    div.id = "fp_blackscreen";
    div.style.height = "100%";
    div.style.width = "100%";
    div.style["background"] = "black";
    div.style["z-index"] = "99999";
    div.style["position"] = "fixed";
    div.style["top"] = "0px";
    div.style["left"] = "0px";
    div.style["opacity"] = 1;
    div.style["visibility"] = "visible";
    div.style["text-align"] = "center";
    div.style["vertical-align"] = "middle";

    div.innerText = "Potential spoiler image hidden.  If video doesn't show click here.";
        document.body.appendChild(div);
    div.addEventListener("click", function() {
        //console.log('clicked');
        document.getElementById("fp_blackscreen").style.display = "none";
    });
        consolelog("made black screen");
}





////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Beginning of file-level footer
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};  // main

    main(runScripts);
    var endTime = new Date();
    consolelog(1, 'full load time = ' + (endTime - startTime) + 'ms');

}(); // global scope
